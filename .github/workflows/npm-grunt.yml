name: Build GravitRDR

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true  # Cancels all older/queued runs

jobs:
  build:
    runs-on: macos-latest  # macOS 14 for runner availability

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # Allow committing package-lock.json

      - name: Check runner status
        run: |
          echo "Checking runner status..."
          sysctl -n machdep.cpu.brand_string
          sw_vers
          xcodebuild -version
          echo "Checking Homebrew prefix..."
          echo $HOMEBREW_PREFIX
          arch
        # Diagnostic to confirm macOS and architecture

      - name: Setup x86_64 Homebrew
        run: |
          arch -x86_64 /bin/bash -c '
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            echo "export PATH=/usr/local/bin:/usr/local/sbin:$PATH" >> ~/.zshrc
            source ~/.zshrc
            brew --version
          '

      - name: Install Homebrew dependencies
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            brew update
            brew install nasm
            brew install libtool
            brew install gettext
            brew install openssl@1.1
            brew link gettext --force
            brew link openssl@1.1 --force
            nasm --version
            glibtool --version
            openssl version
            ls -l /usr/local/lib/libintl*
            ls -l /usr/local/opt/openssl@1.1/lib/libssl*
            brew list gettext
            brew list openssl@1.1
          '
        # Installs nasm, libtool, gettext, openssl@1.1 for Rosetta

      - name: Setup Python 3.7 for node-gyp
        env:
          PYTHON_CONFIGURE_OPTS: "--with-openssl=/usr/local/opt/openssl@1.1"
        uses: actions/setup-python@v5
        with:
          python-version: '3.7'
          architecture: 'x64'

      - name: Verify Python SSL
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            python3.7 -c "import ssl; print(ssl.OPENSSL_VERSION)"
            python3.7 -m pip --version
          '
        # Confirms SSL module and pip are functional

      - name: Setup Node 10.x and npm 6 using nvm (Rosetta x86_64)
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm install 10
            nvm use 10
            npm install -g npm@6
            echo "node version: $(node -v)"
            echo "npm version: $(npm -v)"
            echo "python version: $(python3 --version)"
          '

      - name: Install npm dependencies
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm use 10
            npm install --legacy-peer-deps
            npm ci || npm install --legacy-peer-deps
            git add package-lock.json
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git commit -m "Update package-lock.json" || echo "No changes to commit"
          '

      - name: Install Bower globally
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm use 10
            npm install -g bower
          '

      - name: Install Bower dependencies
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm use 10
            bower install --allow-root
          '

      - name: Run Grunt
        run: |
          arch -x86_64 /bin/bash -c '
            export PATH=/usr/local/bin:/usr/local/sbin:$PATH
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm use 10
            ./node_modules/.bin/grunt
          '